""" Cape Town was chosen as the loadshedding slot allocation could be quickly generated by incrementing the area codes in a base slot
    for stage 8 throughout the day and starting with the base slot again on the next day. There are 4 base slots, with a change in base
    slots occuring after every 4 days. Could add other cities later but concentrating on producing a prototype as quickly as possible
"""
import psycopg2
from decouple import config


#Connect to Database    
conn = psycopg2.connect(database = config('DB_NAME', default=''),
                        user = config('DB_USER', default=''),
                        password = config('DB_PASSWORD', default=''),
                        host = config('DB_HOST', default=''),
                        port = config('DB_PORT', default=''))
    
cur = conn.cursor()

#Uncomment to create table
#t_name = 'cape_town_slots'
#cur.execute("""CREATE TABLE %s (
#            slot_id serial PRIMARY KEY, 
#            day SMALLINT NOT NULL,  
#            start_time TIME NOT NULL, 
#            end_time TIME NOT NULL, 
#            stage1 SMALLINT NOT NULL, 
#            stage2 SMALLINT NOT NULL, 
#            stage3 SMALLINT NOT NULL, 
#            stage4 SMALLINT NOT NULL, 
#            stage5 SMALLINT NOT NULL, 
#            stage6 SMALLINT NOT NULL, 
#            stage7 SMALLINT NOT NULL, 
#            stage8 SMALLINT NOT NULL);""" % t_name)

#Access time_slots[0][1] = '02:30'
time_slots = [('00:00','02:00'), ('02:00','04:00'),('04:00','06:00'),('06:00','08:00'),('08:00','10:00'),('10:00','12:00'),
              ('12:00','14:00'),('14:00','16:00'),('16:00','18:00'),('18:00','20:00'),('20:00','22:00'),('22:00','23:59')]
base_slots = [[1, 9, 13, 5, 2, 10, 14, 6],[2, 10, 14, 6, 3, 11, 15, 7],[3, 11, 15, 7, 4, 12, 16, 8],[4, 12, 16, 8, 1, 9, 13, 5]]

day_count = 0 #change slot counter after 4 days
slot_indx = 0 #slots 0,1,2,3
b_slot = base_slots[slot_indx]

for day in range(1,32): #31 days so max 32

    if day_count > 3:
    #Test if slot index must change based on day
        day_count = 0
        slot_indx = (slot_indx+1)%4
        
    b_slot = base_slots[slot_indx]

    for t_slot in time_slots:
        insert_vals = [day, t_slot[0], t_slot[1], b_slot[0], b_slot[1], b_slot[2],
                        b_slot[3], b_slot[4], b_slot[5], b_slot[6], b_slot[7]]
        cur.execute("""INSERT INTO cape_town_slots (day, start_time, end_time, stage1, stage2, stage3, stage4, stage5, stage6, stage7, stage8)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)""", (insert_vals))
        b_slot =[(x%16)+1 for x in b_slot] #modlus by 16 as only 16 area codes, add 1 after modulus to ensure range from 1 to 16

    day_count += 1
    
conn.commit()
print("Records created successfully")
conn.close()